drop procedure ngbdtxnd;

create procedure ngbdtxnd

 language sql
 modifies sql data
 set option output = *print, dbgview = *source, commit = *none,
            datfmt = *ISO, datsep = '-'

main:

 begin

    declare sqlcode integer default 0;
    declare sqlstate char(5) default '00000';


--****************************************************
-- LOCAL VARS
--****************************************************

    declare w1rcnt int;

--*******************************************************************
-- ERROR FLAGS
-- ERROR FLAGS
--*******************************************************************
    declare rnf int default 0;
    declare tnf int default 0;
    declare rec_not_found condition for '02000';
    declare tab_not_found condition for '42704';


--*******************************************************************
-- CURSORS
--*******************************************************************


--*******************************************************************
-- ERROR HANDLERS
--*******************************************************************
    declare continue handler for rec_not_found set rnf = 1;
    declare continue handler for tab_not_found set tnf = 1;

--*******************************************************************
-- INIT
--*******************************************************************

declare global temporary table session/tdet like transaction_detail
with replace
;


--***********************************************************
-- MAIN
--***********************************************************

insert into qtemp/tdet (
                        BACKORDER_QTY,
                        BUSINESS_CHANNEL_ID,
                        CORE_IND,
                        COUNTRY_CD,
                        CURRENCY_CD,
                        DELIVERED_TO_ADDRESS_ID,
                        DELIVERED_TO_CUSTOMER_ID,
                        DISCOUNT_AMT,
                        EFFORT_ID,
                        EFFORT_YR,
                        ENTERED_SKU,
                        EXT_GROSS_COST_AMT,
                        EXT_GROSS_SALES_AMT,
                        EXT_ITEM_COST_AMT,
                        EXT_SELLING_PRICE_AMT,
                        FULFILLMENT_ID,
                        HOW_PRICED_CD,
                        ORDER_HEADER_ID,
                        ORDER_QTY,
                        PREMIUM_COST_AMT,
                        PRICE_CHANGE_RSN_CD,
                        PRICE_PREFIX_CD,
                        RETURN_REASON_CD,
                        SELLING_SKU,
                        SHIPPED_QTY,
                        SKU_NUM,
                        TRANSACTION_ID,
                        TRANSACTION_LINE_NUM,
                        TRANSACTION_LINE_TYPE,
                        UNIT_ITEM_COST_AMT,
                        UNIT_SELLING_PRICE_AMT
        )
select
                (QTYOOD-QTYTOD)  AS BACKORDER_QTY,
                ''     AS BUSINESS_CHANNEL_ID,
                ''     AS CORE_IND,
                BRANOD   AS COUNTRY_CD,
                CURRKY   AS CURRENCY_CD,
                1        AS DELIVERED_TO_ADDRESS_ID,
                CHAR(CUSTOD)   AS DELIVERED_TO_CUSTOMER_ID,
                0        AS DISCOUNT_AMT,
                SUBSTR(CATLOD,1,3)       AS EFFORT_ID,
                EFFTYR   AS EFFORT_YR,
                SUBSTR(CATLOD,5,LENGTH(CATLOD))  AS ENTERED_SKU,
                case when COSTOD * qtytod > 0
                then COSTOD else 0 end   AS EXT_GROSS_COST_AMT,
                case when QTYTOD * pricod > 0
                then QTYTOD else 0 end   AS EXT_GROSS_SALES_AMT,
                QTYTOD * COSTOD  AS EXT_ITEM_COST_AMT,
                QTYTOD * PRICOD  AS EXT_SELLING_PRICE_AMT,
                0       AS FULFILLMENT_ID,
                SUBSTR(PRCHOD,1,1)      AS HOW_PRICED_CD,
                ORD#OD  AS ORDER_HEADER_ID,
                QTYOOD   AS ORDER_QTY,
                0     AS PREMIUM_COST_AMT,
                PRCDOD   AS PRICE_CHANGE_RSN_CD,
                PRCPRX   AS PRICE_PREFIX_CD,
                ''   AS RETURN_REASON_CD,
                PRDCDE   AS SELLING_SKU,
                QTYTOD   AS SHIPPED_QTY,
                PRDCDE   AS SKU_NUM,
               (TRIM(CHAR(CUSTOD))||TRIM(CHAR(IVDAOD))||
                TRIM(CHAR(IVMOOD))||TRIM(CHAR(IVYROD))||
                TRIM(CHAR(INV#OD)))  
                AS TRANSACTION_ID,
                LINEOD   AS TRANSACTION_LINE_NUM,
                case when QTYTOD > 0 then 'S'
                else case when QTYTOD < 0 then 'C'
                else 'B' end end  AS TRANSACTION_LINE_TYPE,
                COSTOD   AS UNIT_ITEM_COST_AMT,
                PRICOD   AS UNIT_SELLING_PRICE_AMT


from
        UKMSTDTA/INPDETLF
WHERE
        BRANOD = 'GB' ;

get diagnostics w1rcnt = row_count;

 -- Set status info for pre existing rows

insert into dqhist values(
        'GB',
        'D',
        'Txn Details',
        'LEGACY',
        'INPDETLF',
        'ngbdtxnd',
        'E',
        current timestamp,
        w1rcnt,
        0,0)
;
--*************************************************************
-- END
--*************************************************************

 update qtemp/tdet
 set processed_dt = current date
 ;

--*****************************************************************
-- Update BUSINESS_CHANNEL_ID from CUSTOMER_ACCOUNT table
--*****************************************************************
update qtemp/tdet a
set BUSINESS_CHANNEL_ID =
                (select
                case when OD_CUSTOMER_TYPE_CD = 'B2B' then 'V'
                     when OD_CUSTOMER_TYPE_CD = 'B2C' then 'W'
                end
                from customer_account b
                where
                        a.COUNTRY_CD = b.COUNTRY_CD
                and     a.DELIVERED_TO_CUSTOMER_ID = b.CUSTOMER_ID
                and     b.BUSINESS_UNIT_TYPE_CD = 'D'
                )
where exists
                (select 1
                from customer_account b
                where
                        a.COUNTRY_CD = b.COUNTRY_CD
                and     a.DELIVERED_TO_CUSTOMER_ID = b.CUSTOMER_ID
                and     b.BUSINESS_UNIT_TYPE_CD = 'D'
                )
;

--*************************************************************
-- END
--*************************************************************

--*****************************************************************
-- Update RETURN_REASON_CD from INPHEADF table
--*****************************************************************

update qtemp/tdet a
set RETURN_REASON_CD =
(
select RETURN_REASON_CD 
from
(SELECT (case when ORCDOH<>'C' THEN ''
 WHEN (SELECT  COUNT(*)  
FROM UKMSTDTAPV/ORPSERVE C 

WHERE  C.CUSTTS = DTL.CHAR(CUSTOD) 
AND C.LINETS = DTL.LINEOD
 
AND C.INV#TS = HEAD.CRINOH  ) > 0
THEN (SELECT   MAX(RESNTS)  
FROM UKMSTDTAPV/ORPSERVE C

WHERE  C.CUSTTS = DTL.CHAR(CUSTOD) 
AND C.LINETS = DTL.LINEOD

AND C.INV#TS = HEAD.CRINOH ) 
ELSE HEAD.CRMTOH END) AS RETURN_REASON_CD,

DTL.BRANOD,
DTL.LINEOD,

(DTL.CHAR(CUSTOD)||DTL.IVDAOD||IVMOOD||IVYROD||INV#OD) AS TRANSACTION_ID
FROM
UKMSTDTAPV/INPHEADF  HEAD
 JOIN
 UKMSTDTAPV/INPDETLF DTL
ON (HEAD.CUSTOH||HEAD.IVDAOH||HEAD.IVMOOH||HEAD.IVYROH||HEAD.INV#OH)
=
   (DTL.CHAR(CUSTOD)||DTL.IVDAOD||IVMOOD||IVYROD||INV#OD)
 AND HEAD.BRANOH = DTL.BRANOD
) b

where 
a.COUNTRY_CD = b.BRANOD 
and a.TRANSACTION_ID = b.TRANSACTION_ID

and a.FULFILLMENT_ID = 0
 and a.TRANSACTION_LINE_NUM=b.LINEOD
)

;

--*************************************************************
-- END
--*************************************************************


--*****************************************************************
-- Update DISCOUNT_AMT from SEOPE table
--*****************************************************************


update qtemp/tdet c
set DISCOUNT_AMT =
                (select
 (pedisv + peadsv + pevouv)
from ukmstdta/seope a,
ukmstdta/inpdetlf b
where a.pecust = b.CHAR(CUSTOD)
    and a.peord# = b.ord#od
    and a.peinv# = b.inv#od
    and a.peline = b.lineod
    and a.peinv# <> 0
    and b.BRANOD = c.COUNTRY_CD
    and (TRIM(CHAR(CUSTOD))||TRIM(CHAR(IVDAOD))||
         TRIM(CHAR(IVMOOD))||TRIM(CHAR(IVYROD))||
         TRIM(CHAR(INV#OD))) = c.TRANSACTION_ID
    and c.FULFILLMENT_ID=0
    and b.LINEOD   = c.TRANSACTION_LINE_NUM
                );

--*************************************************************
-- END
--*************************************************************


--*****************************************************************
-- Update fields of tdet temp table which are not yet updated
--*****************************************************************

 update qtemp/tdet a
 set (
                BIG_DEAL_COST_AMT,
                BSD_COST_CENTRE,
                BSD_USER,
                COMMISSIONABLE_IND,
                CONTRACT_ID,
                CONTRACT_SEQ,
                CONTRACT_TYPE_CD,
                DIRECT_DELIVERY_CD,
                EXT_BIG_DEAL_COST_AMT,
                INV_LOCATION_ID,
                ITEM_TAXABLE_CD,
                ORDER_LINE_ID,
                PRICE_CD,
                PROCESSED_DT,
                SALES_ASSOCIATE_ID,
                UNIT_LIST_PRICE_AMT,
                UNIT_ORIGINAL_PRICE_AMT,
                VENDOR_ID
                ) =
           (select
                                   BIG_DEAL_COST_AMT,
                                   BSD_COST_CENTRE,
                                   BSD_USER,
                                   COMMISSIONABLE_IND,
                                   CONTRACT_ID,
                                   CONTRACT_SEQ,
                                   CONTRACT_TYPE_CD,
                                   DIRECT_DELIVERY_CD,
                                   EXT_BIG_DEAL_COST_AMT,
                                   INV_LOCATION_ID,
                                   ITEM_TAXABLE_CD,
                                   ORDER_LINE_ID,
                                   PRICE_CD,
                                   PROCESSED_DT,
                                   SALES_ASSOCIATE_ID,
                                   UNIT_LIST_PRICE_AMT,
                                   UNIT_ORIGINAL_PRICE_AMT,
                                   VENDOR_ID
            from   transaction_detail b
            where  a.country_cd = b.country_cd
            and    a.transaction_id = b.transaction_id
            and    a.fulfillment_id = b.fulfillment_id
            and    a.transaction_line_num = b.transaction_line_num
                        )
 where exists
           (select 1
            from   transaction_detail b
            where  a.country_cd = b.country_cd
            and    a.transaction_id = b.transaction_id
            and    a.fulfillment_id = b.fulfillment_id
            and    a.transaction_line_num = b.transaction_line_num
                        )
 ;
--*************************************************************
-- END
--*************************************************************








--*************************************************************
-- Inserting rows from temp table to staging table
--*************************************************************

insert into stg_transaction_detail
select *
from   qtemp/tdet
;

--*************************************************************
-- END
--*************************************************************

get diagnostics w1rcnt = row_count;

insert into dqhist values(
        'GB',
        'D',
        'Txn Details',
        'STAGING',
        'STG_TRANSACTION_DETAIL',
        'ngbdtxnd',
        'I',
        current timestamp,
        w1rcnt,
        0,0)
;


 goto exitproc;


 --*************************************************************
 -- Leave Procedure
 --*************************************************************
 ExitProc:
 loop
 leave ExitProc;
 end loop;

 end

