#!/bin/bash
######################################################################################################################
#   This source code is the property of:
#   Cablevision Systems Corporation, Inc. (c) 2015
#   1111 Stewart Avenue, Bethpage, NY 11714
#   www.cablevision.com
#   Department: AM
#
#   Program name: ovcdr_functions.sh  
#   Program type: Unix Bash Shell script
#   Purpose:    : This script consists of all the utility functions that are used by    
#                 omniture module scripts. Modules shall not call and hadoop related commands    
#                 directly but instead write a wrapper function in this script with     
#                 proper handling of exit codes of the commands.  
#                  Note:                                                                        
#                       1) Variables defined as final in the document must not be modified    
#                          by the module script code.                                         
#                       2) If function argument ends with * then it means that required       
#                          argument.                                                          
#                       3) If function argument ends with ? then it means that optional       
#                          argument.                                                          
#   Author(s)   : DataMetica Team
#   Usage       : 
#   Date        : 05/02/2016
#   Log File    : 
#   SQL File    :                                 
#   Error File  : 
#   Dependency  : 
#   Disclaimer  : 
#
#   Modification History :
#   =======================
#
#    ver     who                      date             comments
#   ------   --------------------     ----------       -------------------------------------
#    1.0     DataMetica Team          05/02/2016       Initial version
#
#
#####################################################################################################################

# Find absolute path to this script which is used to define module, project, subject area home directory paths.
pushd . > /dev/null
SCRIPT_HOME="${BASH_SOURCE[0]}";
while([ -h "${SCRIPT_HOME}" ]); do
    cd "`dirname "${SCRIPT_HOME}"`"
    SCRIPT_HOME="$(readlink "`basename "${SCRIPT_HOME}"`")";
done
cd "`dirname "${SCRIPT_HOME}"`" > /dev/null
SCRIPT_HOME="`pwd`";
popd  > /dev/null

# Set module, project, subject area home paths.
SUBJECT_AREA_HOME=`dirname ${SCRIPT_HOME}`
SUBJECT_AREAS_HOME=`dirname ${SUBJECT_AREA_HOME}`
PROJECT_HOME=`dirname ${SUBJECT_AREAS_HOME}`

###  
source $SUBJECT_AREA_HOME/etc/ovcdr.properties                                                                         
source $PROJECT_HOME/bin/functions.sh

################################################################################
#                                                                              #
# Function to import data directly to hive table                               #
#                                                                              #
################################################################################

function fn_import_table_to_hive_from_oracle(){
   connection_url=$1
   database=$2
   table_name=$3
   query="$4"
   log_file_path=$5
   mappers=$6
   
   fail_on_error=${BOOLEAN_FALSE}

	sqoop import --connect "${connection_url}" \
      --username "${USERNAME}" \
      --password "${PASSWORD}" \
      --query "${query}" \
      --hcatalog-database ${database} \
      --hcatalog-table ${table_name} \
      --compress --compression-codec org.apache.hadoop.io.compress.SnappyCodec \
      --split-by "${seq_column}" \
      -m "${mappers}" >> ${log_file_path} 2>&1
   exit_code="$?"      
   return ${exit_code}  
}


###############################################################################
#                                                                              #
# Function to build query for sqoop import                                     #
#                                                                              #
################################################################################

function fn_build_query_for_import(){
	source_table=$1
	database=$2

query="SELECT * FROM \
      ${database}.${source_table} \
      WHERE \$CONDITIONS"
      
      echo "$query"
  }    

  
################################################################################
#                                                                              #
# Function to get key params for OVCDR 										   #
#                                                                              #
################################################################################

function fn_get_ovcdr_params(){
   key_param_id=$1

   if [ ! -z "${key_param_id}" ]
   then
      export PGPASSWORD=${POSTGRES_PASSWORD};
      get_params=`psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USERNAME} \
                  -P t -P format=unaligned ${POSTGRES_DATABASE_NAME} \
                  -c "SELECT PARAM_DTM_START::TIMESTAMP::DATE|| '~' ||(PARAM_DTM_START + (INCREMENTAL_IN_HRS * INTERVAL '1 HOUR'))::DATE FROM KEY_PARAMS \
                      WHERE KEY_PARAM_ID = $key_param_id;"`
      exit_code=$?
      
      if [ ${exit_code} -ne ${EXIT_CODE_SUCCESS} ]
      then
	 	  return $exit_code
      else
          echo "${get_params}"
      fi
   fi   
}


################################################################################
#                                                                              #
# Function to create job name from suite name                                  #
#                                                                              #
################################################################################

function fn_generate_job_name(){
key_param_id=$1
suite_name="$2"
job_name=$3

   if [[ $suite_name == dom_nsn_in ]] ||
      [[ $suite_name == dom_nsn_out ]] ||
      [[ $suite_name == int_nsn ]] ||
      [[ $suite_name == int_rad ]] ||
      [[ $suite_name == vma_nsn ]]
    then
  suite_name=$(echo "$suite_name" | tr '[:lower:]' '[:upper:]')
  echo "APP_"$key_param_id""_""$suite_name""_""$job_name""
  else
         echo "Suite name '$suite_name' is incorrect."
         echo "Suite name must be one of [dom_nsn_in or dom_nsn_out or int_nsn or int_rad or vma_nsn]"
    exit
   fi
}