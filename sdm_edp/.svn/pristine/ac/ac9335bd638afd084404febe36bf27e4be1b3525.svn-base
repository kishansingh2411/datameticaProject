#!/bin/sh

######################################################################################################################
#   This source code is the property of:
#   Cablevision Systems Corporation, Inc. (c) 2015
#   1111 Stewart Avenue, Bethpage, NY 11714
#   www.cablevision.com
#   Department: AM
#
#   Program name: copy_to_local.sh.sh 
#   Program type: Unix Bash Shell script
#   Purpose:    : This will load data in all Gold layer.                            
#                 Input Arguments for this script is: key_Param_id.               
#   Author(s)   : DataMetica Team
#   Usage       : sh copy_to_local.sh.sh  key_Param_id
#   Date        : 01/30/2017
#   Log File    : .../log/fourthwall_media/${job_name}.log
#   SQL File    :                                 
#   Error File  : .../log/fourthwall_media/${job_name}.log
#   Dependency  : 
#   Disclaimer  : 
#
#   Modification History :
#   =======================
#
#    ver     who                      date             comments
#   ------   --------------------     ----------       -------------------------------------
#    1.0     DataMetica Team          01/30/2017       Initial version
#
#
#####################################################################################################################

###############################################################################
#                          Module Environment Setup                           #
###############################################################################

# Find absolute path to this script which is used to define module, project, subject area home directory paths.
pushd . > /dev/null
SCRIPT_HOME="${BASH_SOURCE[0]}";
while([ -h "${SCRIPT_HOME}" ]); do
    cd "`dirname "${SCRIPT_HOME}"`"
    SCRIPT_HOME="$(readlink "`basename "${SCRIPT_HOME}"`")";
done
cd "`dirname "${SCRIPT_HOME}"`" > /dev/null
SCRIPT_HOME="`pwd`";
popd  > /dev/null

# Set module, project, subject area home paths.
SUBJECT_AREA_HOME=`dirname ${SCRIPT_HOME}`
SUBJECT_AREAS_HOME=`dirname ${SUBJECT_AREA_HOME}`
PROJECT_HOME=`dirname ${SUBJECT_AREAS_HOME}`

###                                                                           
# Load all environment properties files
source $PROJECT_HOME/etc/namespace.properties
source $PROJECT_HOME/etc/beeline.properties
source $PROJECT_HOME/etc/default.env.properties
source $SUBJECT_AREA_HOME/etc/fourthwall_media.properties
source $SUBJECT_AREA_HOME/etc/subject-area.env.properties
source $PROJECT_HOME/etc/postgres.properties
source $PROJECT_HOME/bin/functions.sh
source $SUBJECT_AREA_HOME/bin/fourthwall_media_functions.sh

###############################################################################
#                                                                             #
# Checking number of parameter passed                                         #
#                                                                             #
###############################################################################

if [ "$#" -ne 3 ]
then
  echo "Illegal number of parameters.  Parameters expected [key_param_id, Table name, Output File type]"
  exit 
fi

##############################################################################
#																			 #
#   Local Param 				 			     						     #
#                                    										 #
##############################################################################

key_param_id="$1"
table_name="$2"
file_type="$3"

params="$(fn_get_fourthwall_media_params ${key_param_id})"

if [ -z "$params" ]
then
    echo "Invalid Key-Param Id found : $key_param_id"
    exit
fi

source_date=$(echo $params | cut -f 1 -d '~'| cut -f 1 -d ' ')
dataset_name=$(echo $params | cut -f 3 -d '~')
dataset_name=$(echo "$dataset_name" | tr '[:upper:]' '[:lower:]')
file_type=$(echo "$file_type" | tr '[:upper:]' '[:lower:]')
start_time=`date +"%Y-%m-%d %H:%M:%S"`

if [[ $table_name == "fwm_device_data" ]]
then
    job_name="EDP_FWM_${key_param_id}_DEVIE_TO_LOCAL"
elif [[ $table_name == "fwm_household_data" ]]
then
    job_name="EDP_FWM_${key_param_id}_HSEHLD_TO_LOCAL"
else
    echo "Wrong table name provided"
    exit -1
fi

batch_id_dataset_name_dir_path=${BATCH_ID_DIR}/$dataset_name
current_batch_id_path="$batch_id_dataset_name_dir_path/current"
batch_id=`cat $current_batch_id_path`
log_file_dir="${LOG_DIR_SUBJECT_AREA}"
log_file_path="${log_file_dir}/${job_name}.log"

##############################################################################
#																			 #
# Checking date format		                                                 #
#																			 #
##############################################################################

fn_check_date_format $source_date

##############################################################################
#																			 #
# Capture statistics                                                         #
#																			 #
##############################################################################

fn_insert_job_statistics "${batch_id}" "${job_name}" "${start_time}" "RUNNING" "${log_file_path}" 

##############################################################################
#																			 #
# Copy Data File To Local                                                    #
#																			 #
##############################################################################

source_date=`echo $source_date | tr -d -`
source_table="outgoing_${table_name}"
source_dir="${DATA_LAYER_DIR_OUTGOING_SUBJECT_AREA}/${source_table}/${file_type}/p_yyyymmdd=${source_date}/*"
target_dir="${LOCAL_OUTGOING_DATA_DIRECTORY}/${SUBJECT_AREA_NAME}/${file_type}/"

fn_local_create_directory_if_not_exists ${target_dir} "${BOOLEAN_FALSE}" "${log_file_path}"
exit_code=$?
if [ ${exit_code} -ne $EXIT_CODE_SUCCESS ]
then
   fn_log_error "Failed to create local directory ${target_dir}, Quitting the process" "${log_file_path}"
   fn_update_job_statistics "${batch_id}" "${job_name}" "${start_time}" "NA" "${exit_code}" "${source_date}" "${log_file_path}" "" " "
   return $exit_code
fi   

fn_log_info "Successfully created local directory ${target_dir}" "${log_file_path}"

if [ -z "$(ls -A $target_dir)" ]; then
   fn_copy_to_local "${source_dir}" "${target_dir}" "${BOOLEAN_FALSE}" "${BOOLEAN_FALSE}" "${log_file_path}"
 else
   rm -r "$target_dir"*
   fn_copy_to_local "${source_dir}" "${target_dir}" "${BOOLEAN_FALSE}" "${BOOLEAN_FALSE}" "${log_file_path}"
fi

exit_code=$?   
if [ ${exit_code} -ne $EXIT_CODE_SUCCESS ]
then
   fn_log_error "Failed to copy ${file_type} data to local directory ${target_dir}, Quitting the process" "${log_file_path}"
   fn_update_job_statistics "${batch_id}" "${job_name}" "${start_time}" "NA" "${exit_code}" "${source_date}" "${log_file_path}" "" " "
   return $exit_code
fi   

fn_log_info "Successfully copied ${file_type} data to local directory ${target_dir}" "${log_file_path}"

##############################################################################
#																			 #
# Change the name of the file                                                #
#																			 #
##############################################################################

if [[ ${file_type} == "device" ]]
then
    device_date=`date --date="1 day ago" +"%Y_%m_%d"`
	device_filename="v2.suddenlink.${device_date}.device.txt"
	mv ${target_dir}/* ${target_dir}/${device_filename}
	gzip -f ${target_dir}/${device_filename}
elif [[ $file_type == "household" ]]
then
    house_start=`date --date="7 day ago" +"%Y_%m_%d_00_00_00_%Z"`
	house_end=`date --date="1 day ago" +"%Y_%m_%d_23_59_59_%Z"`
	house_filename="v2.suddenlink.all.${house_start}.${house_end}.0.0.huid"
	mv ${target_dir}/* ${target_dir}/${house_filename}
	gzip -f ${target_dir}/${house_filename}
else
    echo "Wrong Data File type provided"
    exit -1
fi
            
##############################################################################
#																			 #
# Capture statistics                                                         #
#																			 #
##############################################################################

fn_update_job_statistics "${batch_id}" "${job_name}" "${start_time}" "${record_count}" "${exit_code}" "${source_date}" "${log_file_path}" "" " "

##############################################################################
#                                    End                                     #
##############################################################################