--######################################################################################################################
--#   This source code is the property of:
--#   Cablevision Systems Corporation, Inc. (c) 2015
--#   1111 Stewart Avenue, Bethpage, NY 11714
--#   www.cablevision.com
--#   Department: AM
--#
--#   Program name: module-transform.hql
--#   Program type: Hive Query Language script
--#   Purpose:    : Build Work_tmp table from Work table
--#   Author(s)   : DataMetica Team
--#   Usage       : beeline -u  <url> -n <username> -p <password> -hivevar var1=var1 -f module-transform.hql
--#   Date        : 03/01/2017
--#   Log File    : .../log/customer/${job_name}.log
--#   SQL File    : 
--#   Error File  : .../log/customer/${job_name}.log
--#   Dependency  : 
--#   Disclaimer  : 
--#
--#   Modification History :
--#   =======================
--#
--#    ver     who                      date             comments
--#   ------   --------------------     ----------       -------------------------------------
--#    1.0     DataMetica Team          03/01/2017       Initial version
--#
--#
--#####################################################################################################################

set hive.vectorized.execution.enabled=false;

INSERT OVERWRITE 
   TABLE ${hivevar:work_database}.${hivevar:work_bhv_acct_phone_nbr_opt_tmp_tbl} 
SELECT
   *
   ,CASE WHEN GOLD_ID_BHV_ACCOUNT IS NULL AND GOLD_PHONE_NBR IS NULL AND GOLD_DTM_EFFTV IS NULL THEN 'T' ELSE 'F' END AS NEW_FLAG
   ,CASE WHEN ( GOLD_ID_BHV_ACCOUNT IS NOT NULL AND GOLD_PHONE_NBR IS NOT NULL AND GOLD_DTM_EFFTV IS NOT NULL ) 
   AND (ID_ACCOUNT_TN_FLAG = 'T' OR DDP_ACCOUNT_FLAG = 'T' OR AREA_CODE_FLAG = 'T' OR PHONE_EXCHANGE_FLAG = 'T' 
      OR EXCHANGE_EXTENTION_FLAG = 'T' OR CORP_FLAG = 'T' OR HOUSE_FLAG = 'T' OR CUST_FLAG = 'T' OR DTM_EXPIRED_FLAG = 'T'
   OR ID_SERVICE_REC_FLAG = 'T' OR ID_CUST_FLAG = 'T' OR PPI_VENDOR_ACCOUNT_ID_FLAG = 'T' OR ID_IPTN_FLAG = 'T'
   OR ID_TN_TYPE_FLAG = 'T' OR ID_IPTEL_ORDER_FLAG = 'T' OR ID_ORDER_STATUS_FLAG = 'T' OR DTM_CREATED_SRC_FLAG = 'T'
   OR STATUS_DATE_FLAG = 'T' OR END_DATE_FLAG = 'T' OR PORTED_FLAG = 'T' OR SWAP_FROM_ID_ACCOUNT_TN_FLAG = 'T'
   OR SWAP_FROM_TN_FLAG = 'T' OR PRIOR_ID_ORDER_STATUS_FLAG = 'T' ) THEN 'T' ELSE 'F' END AS CHANGED_FLAG 
FROM
   (
    SELECT 
       GOLD.BHV_ACCT_PHONE_NBR_OPT_ID AS GOLD_BHV_ACCT_PHONE_NBR_OPT_ID
       ,WORK.BHV_ACCT_PHONE_NBR_OPT_ID AS WORK_BHV_ACCT_PHONE_NBR_OPT_ID
       ,GOLD.ID_BHV_ACCOUNT AS GOLD_ID_BHV_ACCOUNT
       ,WORK.ID_BHV_ACCOUNT AS WORK_ID_BHV_ACCOUNT
       ,GOLD.PHONE_NBR AS GOLD_PHONE_NBR
       ,WORK.PHONE_NBR AS WORK_PHONE_NBR
       ,GOLD.DTM_EFFTV AS GOLD_DTM_EFFTV
       ,WORK.DTM_EFFTV AS WORK_DTM_EFFTV
       ,GOLD.ID_ACCOUNT_TN AS GOLD_ID_ACCOUNT_TN
       ,WORK.ID_ACCOUNT_TN AS WORK_ID_ACCOUNT_TN
       ,CASE WHEN COALESCE(GOLD.ID_ACCOUNT_TN,-1) = COALESCE(WORK.ID_ACCOUNT_TN,-1) THEN 'F' ELSE 'T' END AS ID_ACCOUNT_TN_FLAG
       ,GOLD.DDP_ACCOUNT AS GOLD_DDP_ACCOUNT
       ,WORK.DDP_ACCOUNT AS WORK_DDP_ACCOUNT
       ,CASE WHEN COALESCE(TRIM(GOLD.DDP_ACCOUNT),'') = COALESCE(TRIM(WORK.DDP_ACCOUNT),'') THEN 'F' ELSE 'T' END AS DDP_ACCOUNT_FLAG
       ,GOLD.AREA_CODE AS GOLD_AREA_CODE
       ,WORK.AREA_CODE AS WORK_AREA_CODE
       ,CASE WHEN COALESCE(TRIM(GOLD.AREA_CODE),'') = COALESCE(TRIM(WORK.AREA_CODE),'') THEN 'F' ELSE 'T' END AS AREA_CODE_FLAG
       ,GOLD.PHONE_EXCHANGE AS GOLD_PHONE_EXCHANGE
       ,WORK.PHONE_EXCHANGE AS WORK_PHONE_EXCHANGE
       ,CASE WHEN COALESCE(TRIM(GOLD.PHONE_EXCHANGE),'') = COALESCE(TRIM(WORK.PHONE_EXCHANGE),'') THEN 'F' ELSE 'T' END AS PHONE_EXCHANGE_FLAG
       ,GOLD.EXCHANGE_EXTENTION AS GOLD_EXCHANGE_EXTENTION
       ,WORK.EXCHANGE_EXTENTION AS WORK_EXCHANGE_EXTENTION
       ,CASE WHEN COALESCE(TRIM(GOLD.EXCHANGE_EXTENTION),'') = COALESCE(TRIM(WORK.EXCHANGE_EXTENTION),'') THEN 'F' ELSE 'T' END AS EXCHANGE_EXTENTION_FLAG
       ,GOLD.CORP AS GOLD_CORP
       ,WORK.CORP AS WORK_CORP
       ,CASE WHEN COALESCE(GOLD.CORP,-1) = COALESCE(WORK.CORP,-1) THEN 'F' ELSE 'T' END AS CORP_FLAG
       ,GOLD.HOUSE AS GOLD_HOUSE
       ,WORK.HOUSE AS WORK_HOUSE
       ,CASE WHEN COALESCE(TRIM(GOLD.HOUSE),'') = COALESCE(TRIM(WORK.HOUSE),'') THEN 'F' ELSE 'T' END AS HOUSE_FLAG
       ,GOLD.CUST AS GOLD_CUST
       ,WORK.CUST AS WORK_CUST
       ,CASE WHEN COALESCE(TRIM(GOLD.CUST),'') = COALESCE(TRIM(WORK.CUST),'') THEN 'F' ELSE 'T' END AS CUST_FLAG
       ,GOLD.DTM_EXPIRED AS GOLD_DTM_EXPIRED
       ,WORK.DTM_EXPIRED AS WORK_DTM_EXPIRED
       ,CASE WHEN COALESCE(GOLD.DTM_EXPIRED,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) = COALESCE(WORK.DTM_EXPIRED,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) THEN 'F' ELSE 'T' END AS DTM_EXPIRED_FLAG
       ,GOLD.ID_SERVICE_REC AS GOLD_ID_SERVICE_REC
       ,WORK.ID_SERVICE_REC AS WORK_ID_SERVICE_REC
       ,CASE WHEN COALESCE(GOLD.ID_SERVICE_REC,-1) = COALESCE(WORK.ID_SERVICE_REC,-1) THEN 'F' ELSE 'T' END AS ID_SERVICE_REC_FLAG
       ,GOLD.ID_CUST AS GOLD_ID_CUST
       ,WORK.ID_CUST AS WORK_ID_CUST
       ,CASE WHEN COALESCE(GOLD.ID_CUST,-1) = COALESCE(WORK.ID_CUST,-1) THEN 'F' ELSE 'T' END AS ID_CUST_FLAG
       ,GOLD.PPI_VENDOR_ACCOUNT_ID AS GOLD_PPI_VENDOR_ACCOUNT_ID
       ,WORK.PPI_VENDOR_ACCOUNT_ID AS WORK_PPI_VENDOR_ACCOUNT_ID
       ,CASE WHEN COALESCE(TRIM(GOLD.PPI_VENDOR_ACCOUNT_ID),'') = COALESCE(TRIM(WORK.PPI_VENDOR_ACCOUNT_ID),'') THEN 'F' ELSE 'T' END AS PPI_VENDOR_ACCOUNT_ID_FLAG
       ,GOLD.ID_IPTN AS GOLD_ID_IPTN
       ,WORK.ID_IPTN AS WORK_ID_IPTN
       ,CASE WHEN COALESCE(GOLD.ID_IPTN,-1) = COALESCE(WORK.ID_IPTN,-1) THEN 'F' ELSE 'T' END AS ID_IPTN_FLAG
       ,GOLD.ID_TN_TYPE AS GOLD_ID_TN_TYPE
       ,WORK.ID_TN_TYPE AS WORK_ID_TN_TYPE
       ,CASE WHEN COALESCE(GOLD.ID_TN_TYPE,-1) = COALESCE(WORK.ID_TN_TYPE,-1) THEN 'F' ELSE 'T' END AS ID_TN_TYPE_FLAG
       ,GOLD.ID_IPTEL_ORDER AS GOLD_ID_IPTEL_ORDER
       ,WORK.ID_IPTEL_ORDER AS WORK_ID_IPTEL_ORDER
       ,CASE WHEN COALESCE(GOLD.ID_IPTEL_ORDER,-1) = COALESCE(WORK.ID_IPTEL_ORDER,-1) THEN 'F' ELSE 'T' END AS ID_IPTEL_ORDER_FLAG
       ,GOLD.ID_ORDER_STATUS AS GOLD_ID_ORDER_STATUS
       ,WORK.ID_ORDER_STATUS AS WORK_ID_ORDER_STATUS
       ,CASE WHEN COALESCE(GOLD.ID_ORDER_STATUS,-1) = COALESCE(WORK.ID_ORDER_STATUS,-1) THEN 'F' ELSE 'T' END AS ID_ORDER_STATUS_FLAG
       ,GOLD.DTM_CREATED_SRC AS GOLD_DTM_CREATED_SRC
       ,WORK.DTM_CREATED_SRC AS WORK_DTM_CREATED_SRC
       ,CASE WHEN COALESCE(GOLD.DTM_CREATED_SRC,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) = COALESCE(WORK.DTM_CREATED_SRC,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) THEN 'F' ELSE 'T' END AS DTM_CREATED_SRC_FLAG
       ,GOLD.STATUS_DATE AS GOLD_STATUS_DATE
       ,WORK.STATUS_DATE AS WORK_STATUS_DATE
       ,CASE WHEN COALESCE(GOLD.STATUS_DATE,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) = COALESCE(WORK.STATUS_DATE,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) THEN 'F' ELSE 'T' END AS STATUS_DATE_FLAG
       ,GOLD.END_DATE AS GOLD_END_DATE
       ,WORK.END_DATE AS WORK_END_DATE
       ,CASE WHEN COALESCE(GOLD.END_DATE,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) = COALESCE(WORK.END_DATE,CAST('${hive_default_coalesce_value}' AS TIMESTAMP)) THEN 'F' ELSE 'T' END AS END_DATE_FLAG
       ,GOLD.PORTED AS GOLD_PORTED
       ,WORK.PORTED AS WORK_PORTED
       ,CASE WHEN COALESCE(TRIM(GOLD.PORTED),'') = COALESCE(TRIM(WORK.PORTED),'') THEN 'F' ELSE 'T' END AS PORTED_FLAG
       ,GOLD.SWAP_FROM_ID_ACCOUNT_TN AS GOLD_SWAP_FROM_ID_ACCOUNT_TN
       ,WORK.SWAP_FROM_ID_ACCOUNT_TN AS WORK_SWAP_FROM_ID_ACCOUNT_TN
       ,CASE WHEN COALESCE(GOLD.SWAP_FROM_ID_ACCOUNT_TN,-1) = COALESCE(WORK.SWAP_FROM_ID_ACCOUNT_TN,-1) THEN 'F' ELSE 'T' END AS SWAP_FROM_ID_ACCOUNT_TN_FLAG
       ,GOLD.SWAP_FROM_TN AS GOLD_SWAP_FROM_TN
       ,WORK.SWAP_FROM_TN AS WORK_SWAP_FROM_TN
       ,CASE WHEN COALESCE(TRIM(GOLD.SWAP_FROM_TN),'') = COALESCE(TRIM(WORK.SWAP_FROM_TN),'') THEN 'F' ELSE 'T' END AS SWAP_FROM_TN_FLAG
       ,GOLD.PRIOR_ID_ORDER_STATUS AS GOLD_PRIOR_ID_ORDER_STATUS
       ,WORK.PRIOR_ID_ORDER_STATUS AS WORK_PRIOR_ID_ORDER_STATUS
       ,CASE WHEN COALESCE(GOLD.PRIOR_ID_ORDER_STATUS,-1) = COALESCE(WORK.PRIOR_ID_ORDER_STATUS,-1) THEN 'F' ELSE 'T' END AS PRIOR_ID_ORDER_STATUS_FLAG
       ,COALESCE(GOLD.DTM_CREATED,CURRENT_TIMESTAMP) AS DTM_CREATED
       ,COALESCE(GOLD.DTM_LAST_MODIFIED,CURRENT_TIMESTAMP) AS DTM_LAST_MODIFIED
    FROM ${hivevar:work_database}.${hivevar:work_bhv_acct_phone_nbr_opt_tbl} WORK
    LEFT OUTER JOIN ${hivevar:gold_database}.${hivevar:gold_bhv_acct_phone_nbr_opt_tbl} GOLD 
       ON GOLD.ID_BHV_ACCOUNT = WORK.ID_BHV_ACCOUNT
       AND GOLD.PHONE_NBR = WORK.PHONE_NBR
       AND GOLD.DTM_EFFTV = WORK.DTM_EFFTV
) TEMP
;

--##############################################################################
--#                                    End                                     #
--##############################################################################